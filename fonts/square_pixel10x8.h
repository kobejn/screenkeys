

/*
 *
 * new Font
 *
 * created with FontCreator
 * written by F. Maximilian Thiele
 *
 * http://www.apetech.de/fontCreator
 * me@apetech.de
 *
 * File Name           : square_pixel.c
 * Date                : 09.01.2014
 * Font size in bytes  : 4022
 * Font width          : 10
 * Font height         : 8
 * Font first char     : 32
 * Font last char      : 128
 * Font used chars     : 96
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#include <inttypes.h>
#include <avr/pgmspace.h>

#ifndef SQUAREPIXEL10X8_H
#define SQUAREPIXEL10X8_H

#define NEW_FONT_WIDTH 10
#define NEW_FONT_HEIGHT 8

static uint8_t square_pixel10x8[] PROGMEM = {
    0x0F, 0xB6, // size
    0x0A, // width
    0x08, // height
    0x20, // first char
    0x60, // char count
    
    // char widths
    0x00, 0x02, 0x04, 0x06, 0x06, 0x06, 0x06, 0x02, 0x03, 0x03, 
    0x04, 0x04, 0x02, 0x04, 0x02, 0x06, 0x06, 0x03, 0x06, 0x06, 
    0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x02, 0x02, 0x03, 0x04, 
    0x03, 0x05, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 
    0x06, 0x04, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 
    0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x03, 
    0x06, 0x03, 0x04, 0x06, 0x02, 0x06, 0x06, 0x06, 0x06, 0x06, 
    0x06, 0x06, 0x06, 0x04, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 
    0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 
    0x06, 0x04, 0x02, 0x04, 0x06, 0x00, 
    
    // font data
    0x5E, 0x5E, // 33
    0x06, 0x00, 0x00, 0x06, // 34
    0x24, 0x7E, 0x24, 0x24, 0x7E, 0x24, // 35
    0x5E, 0x5A, 0xFF, 0xFF, 0x5A, 0x7A, // 36
    0x46, 0x26, 0x18, 0x18, 0x64, 0x62, // 37
    0x7E, 0x5A, 0x5A, 0x5A, 0x7E, 0x58, // 38
    0x06, 0x06, // 39
    0x3C, 0x3C, 0x42, // 40
    0x42, 0x3C, 0x3C, // 41
    0x3C, 0x24, 0x24, 0x3C, // 42
    0x18, 0x3C, 0x3C, 0x18, // 43
    0x40, 0xC0, // 44
    0x18, 0x18, 0x18, 0x18, // 45
    0x40, 0x40, // 46
    0x40, 0x20, 0x18, 0x18, 0x04, 0x02, // 47
    0x7E, 0x62, 0x5A, 0x5A, 0x46, 0x7E, // 48
    0x42, 0x7E, 0x40, // 49
    0x7A, 0x5A, 0x5A, 0x5A, 0x5A, 0x5E, // 50
    0x42, 0x5A, 0x5A, 0x5A, 0x5A, 0x7E, // 51
    0x1E, 0x18, 0x18, 0x18, 0x18, 0x7E, // 52
    0x5E, 0x5A, 0x5A, 0x5A, 0x5A, 0x32, // 53
    0x7E, 0x5A, 0x5A, 0x5A, 0x5A, 0x7A, // 54
    0x02, 0x02, 0x02, 0x02, 0x02, 0x7E, // 55
    0x7E, 0x5A, 0x5A, 0x5A, 0x5A, 0x7E, // 56
    0x5E, 0x5A, 0x5A, 0x5A, 0x5A, 0x7E, // 57
    0x24, 0x24, // 58
    0x44, 0xC4, // 59
    0x10, 0x38, 0x2C, // 60
    0x24, 0x24, 0x24, 0x24, // 61
    0x2C, 0x38, 0x10, // 62
    0x02, 0x5A, 0x5A, 0x1A, 0x0C, // 63
    0x7E, 0x42, 0x5A, 0x5A, 0x5A, 0x5E, // 64
    0x7E, 0x1A, 0x1A, 0x1A, 0x1A, 0x7E, // 65
    0x7E, 0x5A, 0x5A, 0x5A, 0x5A, 0x3C, // 66
    0x7E, 0x42, 0x42, 0x42, 0x42, 0x42, // 67
    0x7E, 0x42, 0x42, 0x42, 0x42, 0x3C, // 68
    0x7E, 0x5A, 0x5A, 0x5A, 0x5A, 0x42, // 69
    0x7E, 0x1A, 0x1A, 0x1A, 0x1A, 0x02, // 70
    0x7E, 0x42, 0x42, 0x5A, 0x5A, 0x7A, // 71
    0x7E, 0x18, 0x18, 0x18, 0x18, 0x7E, // 72
    0x42, 0x7E, 0x7E, 0x42, // 73
    0x22, 0x42, 0x42, 0x42, 0x42, 0x3E, // 74
    0x7E, 0x18, 0x18, 0x18, 0x24, 0x42, // 75
    0x7E, 0x40, 0x40, 0x40, 0x40, 0x40, // 76
    0x7E, 0x04, 0x18, 0x18, 0x04, 0x7E, // 77
    0x7E, 0x04, 0x18, 0x18, 0x20, 0x7E, // 78
    0x7E, 0x42, 0x42, 0x42, 0x42, 0x7E, // 79
    0x7E, 0x1A, 0x1A, 0x1A, 0x1A, 0x1E, // 80
    0x7E, 0x42, 0x42, 0x52, 0x62, 0x5E, // 81
    0x7E, 0x1A, 0x1A, 0x1A, 0x3A, 0x4C, // 82
    0x5E, 0x5A, 0x5A, 0x5A, 0x5A, 0x7A, // 83
    0x02, 0x02, 0x7E, 0x7E, 0x02, 0x02, // 84
    0x3E, 0x40, 0x40, 0x40, 0x40, 0x3E, // 85
    0x1E, 0x30, 0x60, 0x60, 0x30, 0x1E, // 86
    0x3E, 0x40, 0x7E, 0x7E, 0x40, 0x3E, // 87
    0x42, 0x24, 0x18, 0x18, 0x24, 0x42, // 88
    0x02, 0x04, 0x78, 0x78, 0x04, 0x02, // 89
    0x42, 0x62, 0x5A, 0x5A, 0x46, 0x42, // 90
    0x7E, 0x7E, 0x42, // 91
    0x02, 0x04, 0x0C, 0x18, 0x20, 0x60, // 92
    0x42, 0x7E, 0x7E, // 93
    0x18, 0x04, 0x04, 0x18, // 94
    0x40, 0x40, 0x40, 0x40, 0x40, 0x40, // 95
    0x06, 0x04, // 96
    0x7E, 0x1A, 0x1A, 0x1A, 0x1A, 0x7E, // 97
    0x7E, 0x5A, 0x5A, 0x5A, 0x5A, 0x3C, // 98
    0x7E, 0x42, 0x42, 0x42, 0x42, 0x42, // 99
    0x7E, 0x42, 0x42, 0x42, 0x42, 0x3C, // 100
    0x7E, 0x5A, 0x5A, 0x5A, 0x5A, 0x42, // 101
    0x7E, 0x1A, 0x1A, 0x1A, 0x1A, 0x02, // 102
    0x7E, 0x42, 0x42, 0x5A, 0x5A, 0x7A, // 103
    0x7E, 0x18, 0x18, 0x18, 0x18, 0x7E, // 104
    0x42, 0x7E, 0x7E, 0x42, // 105
    0x22, 0x42, 0x42, 0x42, 0x42, 0x3E, // 106
    0x7E, 0x18, 0x18, 0x18, 0x24, 0x42, // 107
    0x7E, 0x40, 0x40, 0x40, 0x40, 0x40, // 108
    0x7E, 0x04, 0x18, 0x18, 0x04, 0x7E, // 109
    0x7E, 0x04, 0x18, 0x18, 0x20, 0x7E, // 110
    0x7E, 0x42, 0x42, 0x42, 0x42, 0x7E, // 111
    0x7E, 0x1A, 0x1A, 0x1A, 0x1A, 0x1E, // 112
    0x7E, 0x42, 0x42, 0x52, 0x62, 0x5E, // 113
    0x7E, 0x1A, 0x1A, 0x1A, 0x3A, 0x4C, // 114
    0x5E, 0x5A, 0x5A, 0x5A, 0x5A, 0x7A, // 115
    0x02, 0x02, 0x7E, 0x7E, 0x02, 0x02, // 116
    0x3E, 0x40, 0x40, 0x40, 0x40, 0x3E, // 117
    0x1E, 0x30, 0x60, 0x60, 0x30, 0x1E, // 118
    0x3E, 0x40, 0x7E, 0x7E, 0x40, 0x3E, // 119
    0x42, 0x24, 0x18, 0x18, 0x24, 0x42, // 120
    0x02, 0x04, 0x78, 0x78, 0x04, 0x02, // 121
    0x42, 0x62, 0x5A, 0x5A, 0x46, 0x42, // 122
    0x18, 0x7E, 0x7E, 0x42, // 123
    0x7E, 0x7E, // 124
    0x42, 0x7E, 0x7E, 0x18, // 125
    0x06, 0x02, 0x06, 0x06, 0x04, 0x06, // 126
    
};

#endif
