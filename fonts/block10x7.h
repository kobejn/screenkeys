

/*
 *
 * blockSmall
 *
 * created with FontCreator
 * written by F. Maximilian Thiele
 *
 * http://www.apetech.de/fontCreator
 * me@apetech.de
 *
 * File Name           : block10x7.h
 * Date                : 09.01.2014
 * Font size in bytes  : 3574
 * Font width          : 10
 * Font height         : 7
 * Font first char     : 32
 * Font last char      : 128
 * Font used chars     : 96
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#include <inttypes.h>
#ifdef __AVR__
#include <avr/pgmspace.h>
#else
#define PROGMEM
#endif

#ifndef BLOCK10X7_H
#define BLOCK10X7_H

#define BLOCK10X7_WIDTH 10
#define BLOCK10X7_HEIGHT 7

static const uint8_t block10x7[] PROGMEM = {
    0x0D, 0xF6, // size
    0x0A, // width
    0x07, // height
    0x20, // first char
    0x60, // char count
    
    // char widths
    0x00, 0x02, 0x06, 0x00, 0x06, 0x00, 0x00, 0x02, 0x07, 0x06, 
    0x06, 0x06, 0x02, 0x06, 0x02, 0x06, 0x06, 0x02, 0x06, 0x07, 
    0x07, 0x06, 0x06, 0x07, 0x06, 0x07, 0x02, 0x02, 0x05, 0x06, 
    0x04, 0x06, 0x00, 0x06, 0x06, 0x07, 0x07, 0x07, 0x07, 0x06, 
    0x06, 0x02, 0x07, 0x06, 0x07, 0x06, 0x06, 0x06, 0x06, 0x06, 
    0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x04, 
    0x06, 0x04, 0x06, 0x06, 0x05, 0x06, 0x06, 0x07, 0x07, 0x06, 
    0x06, 0x06, 0x06, 0x02, 0x04, 0x06, 0x02, 0x06, 0x06, 0x06, 
    0x06, 0x07, 0x07, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 
    0x06, 0x06, 0x02, 0x06, 0x00, 0x01, 
    
    // font data
    0xDE, 0xDE, // 33
    0x3E, 0x3E, 0x00, 0x00, 0x3E, 0x3E, // 34
    0xDE, 0xDA, 0xFE, 0xFE, 0xB6, 0xF6, // 36
    0x3E, 0x3E, // 39
    0x30, 0x30, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, // 40
    0xC6, 0xC6, 0xC6, 0xC6, 0x30, 0x30, // 41
    0xC6, 0xC6, 0xFE, 0xFE, 0xC6, 0xC6, // 42
    0x30, 0x30, 0xFE, 0xFE, 0x30, 0x30, // 43
    0xF0, 0xF0, // 44
    0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // 45
    0xC0, 0xC0, // 46
    0xC0, 0xC0, 0x30, 0x30, 0x06, 0x06, // 47
    0xFE, 0xFE, 0xC6, 0xC6, 0xFE, 0xFE, // 48
    0xFE, 0xFE, // 49
    0xF6, 0xF6, 0xF6, 0xDE, 0xDE, 0xDE, // 50
    0xD6, 0xD6, 0xD6, 0xD6, 0xD6, 0xFE, 0xFE, // 51
    0x3E, 0x3E, 0x30, 0x30, 0x30, 0xFE, 0xFE, // 52
    0xDE, 0xDE, 0xD6, 0xD6, 0xF6, 0xF6, // 53
    0xFE, 0xFE, 0xD0, 0xD0, 0xD0, 0xF0, // 54
    0x06, 0x06, 0x06, 0x06, 0x06, 0xFE, 0xFE, // 55
    0xFE, 0xFE, 0xD6, 0xD6, 0xFE, 0xFE, // 56
    0x3E, 0x3E, 0x36, 0x36, 0x36, 0xFE, 0xFE, // 57
    0xC6, 0xC6, // 58
    0xF6, 0xF6, // 59
    0x30, 0x30, 0x00, 0xC6, 0xC6, // 60
    0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, // 61
    0xC6, 0xC6, 0x30, 0x30, // 62
    0x06, 0x06, 0xF6, 0xF6, 0x3E, 0x3E, // 63
    0xFE, 0xFE, 0x36, 0x36, 0xFE, 0xFE, // 65
    0xFE, 0xFE, 0xD6, 0xD6, 0xFE, 0xFE, // 66
    0xFE, 0xFE, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, // 67
    0xFE, 0xFE, 0xC6, 0xC6, 0xC6, 0x7C, 0x7C, // 68
    0xFE, 0xFE, 0xD6, 0xD6, 0xD6, 0xD6, 0xD6, // 69
    0xFE, 0xFE, 0x36, 0x36, 0x36, 0x36, 0x36, // 70
    0xFE, 0xFE, 0xC6, 0xC6, 0xF6, 0xF6, // 71
    0xFE, 0xFE, 0x30, 0x30, 0xFE, 0xFE, // 72
    0xFE, 0xFE, // 73
    0xE0, 0xE0, 0xC0, 0xC0, 0xC0, 0xFE, 0xFE, // 74
    0xFE, 0xFE, 0x30, 0x30, 0xC6, 0xC6, // 75
    0xFE, 0xFE, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, // 76
    0xFE, 0x1E, 0xFE, 0xFE, 0x1E, 0xFE, // 77
    0xFE, 0x1E, 0xFE, 0xFE, 0xF0, 0xFE, // 78
    0xFE, 0xFE, 0xC6, 0xC6, 0xFE, 0xFE, // 79
    0xFE, 0xFE, 0x36, 0x36, 0x3E, 0x3E, // 80
    0xFE, 0xFE, 0xE6, 0x76, 0xFE, 0xDE, // 81
    0xFE, 0xFE, 0x36, 0x16, 0xDE, 0xDE, // 82
    0xDE, 0xDE, 0xD6, 0xD6, 0xF6, 0xF6, // 83
    0x06, 0x06, 0xFE, 0xFE, 0x06, 0x06, // 84
    0xFE, 0xFE, 0xC0, 0xC0, 0xFE, 0xFE, // 85
    0x1E, 0x1E, 0xC0, 0xC0, 0x1E, 0x1E, // 86
    0xFE, 0xE0, 0xFE, 0xFE, 0xE0, 0xFE, // 87
    0xC6, 0xC6, 0x30, 0x30, 0xC6, 0xC6, // 88
    0x3E, 0x3E, 0xF0, 0xF0, 0x3E, 0x3E, // 89
    0xF6, 0xF6, 0xB6, 0xB6, 0xBE, 0xBE, // 90
    0xFE, 0xFE, 0xC6, 0xC6, // 91
    0x06, 0x06, 0x30, 0x30, 0xC0, 0xC0, // 92
    0xC6, 0xC6, 0xFE, 0xFE, // 93
    0x30, 0x30, 0x06, 0x06, 0x30, 0x30, // 94
    0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, // 95
    0x06, 0x06, 0x00, 0x30, 0x30, // 96
    0xF6, 0xF6, 0xF6, 0xB6, 0xBE, 0xFE, // 97
    0xFE, 0xFE, 0xB0, 0xB0, 0xB0, 0xF0, // 98
    0xFE, 0xFE, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, // 99
    0xF0, 0xF0, 0xB0, 0xB0, 0xB0, 0xFE, 0xFE, // 100
    0xFE, 0xFE, 0x96, 0x96, 0xDE, 0xDE, // 101
    0x30, 0x30, 0xFE, 0xFE, 0x36, 0x36, // 102
    0xDE, 0xDE, 0xD6, 0xD6, 0xFE, 0xFE, // 103
    0xFE, 0xFE, 0x30, 0x30, 0xF0, 0xF0, // 104
    0xF6, 0xF6, // 105
    0xC0, 0xC0, 0xF6, 0xF6, // 106
    0xFE, 0xFE, 0x30, 0x30, 0xC6, 0xC6, // 107
    0xFE, 0xFE, // 108
    0xFE, 0x1E, 0xFE, 0xFE, 0x1E, 0xFE, // 109
    0xFE, 0xFE, 0x06, 0x06, 0xFE, 0xFE, // 110
    0xFE, 0xFE, 0xC6, 0xC6, 0xFE, 0xFE, // 111
    0xFE, 0xFE, 0x36, 0x36, 0x3E, 0x3E, // 112
    0x3E, 0x3E, 0x36, 0x36, 0x36, 0xFE, 0xFE, // 113
    0xFE, 0xFE, 0x06, 0x06, 0x06, 0x06, 0x06, // 114
    0xBE, 0xBE, 0xB6, 0xF6, 0xF6, 0xF6, // 115
    0x30, 0x30, 0xFE, 0xFE, 0xB0, 0xB0, // 116
    0xFE, 0xFE, 0xC0, 0xC0, 0xFE, 0xFE, // 117
    0x1E, 0x1E, 0xC0, 0xC0, 0x1E, 0x1E, // 118
    0xFE, 0xE0, 0xFE, 0xFE, 0xE0, 0xFE, // 119
    0xC6, 0xC6, 0x30, 0x30, 0xC6, 0xC6, // 120
    0xDE, 0xDE, 0xF0, 0xF0, 0x1E, 0x1E, // 121
    0xF6, 0xF6, 0xF6, 0xB6, 0xBE, 0xBE, // 122
    0x10, 0x10, 0xFE, 0xFE, 0xC6, 0xC6, // 123
    0xFE, 0xFE, // 124
    0xC6, 0xC6, 0xFE, 0xFE, 0x10, 0x10, // 125
    0x00 // 127
    
};

#endif
